<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Verify backstage pass behaviour" tests="6" skipped="0" failures="0" errors="0" timestamp="2020-11-21T18:52:06" hostname="Workbook Pro" time="0.041">
  <properties/>
  <testcase name="Double quality increase within 10 days of expiration for sellIn 10" classname="Verify backstage pass behaviour" time="0.008"/>
  <testcase name="Double quality increase within 10 days of expiration for sellIn 7" classname="Verify backstage pass behaviour" time="0.005"/>
  <testcase name="Triple quality increase within 5 days of expiration for sellIn 5" classname="Verify backstage pass behaviour" time="0.01"/>
  <testcase name="Triple quality increase within 5 days of expiration for sellIn 2" classname="Verify backstage pass behaviour" time="0.006"/>
  <testcase name="Loose quality when pass is expired" classname="Verify backstage pass behaviour" time="0.006"/>
  <testcase name="Backstage pass quality does not rise over 50" classname="Verify backstage pass behaviour" time="0.006"/>
  <system-out><![CDATA[
Scenario: Double quality increase within 10 days of expiration for sellIn 10                 # src/test/resources/BackstagePass.feature:3
  Given item named "Backstage passes to a TAFKAL80ETC concert" with quality 10 and sellIn 10 # com.gildedrose.Tests.item_named_with_quality_and_sell_in(java.lang.String,java.lang.Integer,java.lang.Integer)
  When 1 days pass                                                                           # com.gildedrose.Tests.days_pass(java.lang.Integer)
  Then quality should be 12 and sellIn should be 9                                           # com.gildedrose.Tests.quality_should_be_and_sell_in_should_be(java.lang.Integer,java.lang.Integer)

Scenario: Double quality increase within 10 days of expiration for sellIn 7                 # src/test/resources/BackstagePass.feature:8
  Given item named "Backstage passes to a TAFKAL80ETC concert" with quality 10 and sellIn 7 # com.gildedrose.Tests.item_named_with_quality_and_sell_in(java.lang.String,java.lang.Integer,java.lang.Integer)
  When 1 days pass                                                                          # com.gildedrose.Tests.days_pass(java.lang.Integer)
  Then quality should be 12 and sellIn should be 6                                          # com.gildedrose.Tests.quality_should_be_and_sell_in_should_be(java.lang.Integer,java.lang.Integer)

Scenario: Triple quality increase within 5 days of expiration for sellIn 5                  # src/test/resources/BackstagePass.feature:13
  Given item named "Backstage passes to a TAFKAL80ETC concert" with quality 10 and sellIn 5 # com.gildedrose.Tests.item_named_with_quality_and_sell_in(java.lang.String,java.lang.Integer,java.lang.Integer)
  When 1 days pass                                                                          # com.gildedrose.Tests.days_pass(java.lang.Integer)
  Then quality should be 13 and sellIn should be 4                                          # com.gildedrose.Tests.quality_should_be_and_sell_in_should_be(java.lang.Integer,java.lang.Integer)

Scenario: Triple quality increase within 5 days of expiration for sellIn 2                  # src/test/resources/BackstagePass.feature:18
  Given item named "Backstage passes to a TAFKAL80ETC concert" with quality 10 and sellIn 2 # com.gildedrose.Tests.item_named_with_quality_and_sell_in(java.lang.String,java.lang.Integer,java.lang.Integer)
  When 1 days pass                                                                          # com.gildedrose.Tests.days_pass(java.lang.Integer)
  Then quality should be 13 and sellIn should be 1                                          # com.gildedrose.Tests.quality_should_be_and_sell_in_should_be(java.lang.Integer,java.lang.Integer)

Scenario: Loose quality when pass is expired                                                # src/test/resources/BackstagePass.feature:23
  Given item named "Backstage passes to a TAFKAL80ETC concert" with quality 10 and sellIn 0 # com.gildedrose.Tests.item_named_with_quality_and_sell_in(java.lang.String,java.lang.Integer,java.lang.Integer)
  When 1 days pass                                                                          # com.gildedrose.Tests.days_pass(java.lang.Integer)
  Then quality should be 0 and sellIn should be -1                                          # com.gildedrose.Tests.quality_should_be_and_sell_in_should_be(java.lang.Integer,java.lang.Integer)

Scenario: Backstage pass quality does not rise over 50                                      # src/test/resources/BackstagePass.feature:28
  Given item named "Backstage passes to a TAFKAL80ETC concert" with quality 50 and sellIn 5 # com.gildedrose.Tests.item_named_with_quality_and_sell_in(java.lang.String,java.lang.Integer,java.lang.Integer)
  When 1 days pass                                                                          # com.gildedrose.Tests.days_pass(java.lang.Integer)
  Then quality should be 50 and sellIn should be 4                                          # com.gildedrose.Tests.quality_should_be_and_sell_in_should_be(java.lang.Integer,java.lang.Integer)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
